import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.Cthp9TdA.js";const o=JSON.parse('{"title":"Результаты проверки","description":"","frontmatter":{},"headers":[],"relativePath":"checkout-result.md","filePath":"checkout-result.md"}'),l={name:"checkout-result.md"};function h(e,s,k,p,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="результаты-проверки" tabindex="-1">Результаты проверки <a class="header-anchor" href="#результаты-проверки" aria-label="Permalink to &quot;Результаты проверки&quot;">​</a></h1><h2 id="содержание" tabindex="-1">Содержание <a class="header-anchor" href="#содержание" aria-label="Permalink to &quot;Содержание&quot;">​</a></h2><ul><li><a href="#обзор">Обзор</a></li><li><a href="#список-результатов">Список результатов</a></li><li><a href="#использование-в-api">Использование в API</a></li></ul><h2 id="обзор" tabindex="-1">Обзор <a class="header-anchor" href="#обзор" aria-label="Permalink to &quot;Обзор&quot;">​</a></h2><p>Результат проверки - это текстовый идентификатор, который указывает итог проведенной проверки игрока. Этот параметр является обязательным при завершении проверки через API и используется для:</p><ul><li>Определения дальнейших действий с игроком</li><li>Ведения статистики проверок</li><li>Формирования отчетов</li><li>Анализа эффективности проверок</li></ul><h2 id="список-результатов" tabindex="-1">Список результатов <a class="header-anchor" href="#список-результатов" aria-label="Permalink to &quot;Список результатов&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Результат</th><th>Описание</th><th>Когда использовать</th></tr></thead><tbody><tr><td><code>ban</code></td><td>Бан игрока</td><td>Когда игрок нарушил правила и должен быть забанен</td></tr><tr><td><code>clean</code></td><td>Игрок чист</td><td>Когда проверка не выявила нарушений</td></tr><tr><td><code>autobuy</code></td><td>Подтвержден автобай</td><td>Когда подтверждено использование автоматической покупки</td></tr><tr><td><code>autosell</code></td><td>Подтвержден автоселл</td><td>Когда подтверждено использование автоматической продажи</td></tr></tbody></table><h2 id="использование-в-api" tabindex="-1">Использование в API <a class="header-anchor" href="#использование-в-api" aria-label="Permalink to &quot;Использование в API&quot;">​</a></h2><h3 id="пример-использования-в-запросе" tabindex="-1">Пример использования в запросе <a class="header-anchor" href="#пример-использования-в-запросе" aria-label="Permalink to &quot;Пример использования в запросе&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Завершение проверки с указанием результата</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> endCheckout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;https://journal.holyworld.me/srv/api/v1/checkout/end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        headers: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;x-token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ваш_api_токен&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;Content-Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        body: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          result: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ban&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Один из результатов из списка выше</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          destroyStash: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          banReason: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2.4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Результат:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ошибка:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Важные замечания</p><ul><li>Результат проверки является обязательным параметром</li><li>Значение должно точно соответствовать одному из допустимых вариантов</li><li>При результате <code>ban</code> обязательно указывать <code>banReason</code></li><li>Неправильное значение результата приведет к ошибке 400 Bad Request</li><li>Результат проверки сохраняется в истории и не может быть изменен после завершения проверки</li></ul></div>`,12)]))}const c=i(l,[["render",h]]);export{o as __pageData,c as default};
